// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.2
// source: protos/blocks.proto

package block

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Block definition
type Block struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Block_FileStartBlock
	//	*Block_FileEndBlock
	//	*Block_RowStartBlock
	//	*Block_RowEndBlock
	//	*Block_ColumnStartBlock
	//	*Block_ColumnEndBlock
	//	*Block_ContentBlock
	//	*Block_CalloutBlock
	//	*Block_CodeBlock
	//	*Block_QuoteBlock
	//	*Block_EquationBlock
	//	*Block_DividerBlock
	//	*Block_ListBlock
	//	*Block_TableOfContentsBlock
	//	*Block_BreadcrumbBlock
	//	*Block_TodoListBlock
	Kind          isBlock_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_protos_blocks_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetKind() isBlock_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Block) GetFileStartBlock() *FileStartBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_FileStartBlock); ok {
			return x.FileStartBlock
		}
	}
	return nil
}

func (x *Block) GetFileEndBlock() *FileEndBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_FileEndBlock); ok {
			return x.FileEndBlock
		}
	}
	return nil
}

func (x *Block) GetRowStartBlock() *RowStartBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_RowStartBlock); ok {
			return x.RowStartBlock
		}
	}
	return nil
}

func (x *Block) GetRowEndBlock() *RowEndBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_RowEndBlock); ok {
			return x.RowEndBlock
		}
	}
	return nil
}

func (x *Block) GetColumnStartBlock() *ColumnStartBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_ColumnStartBlock); ok {
			return x.ColumnStartBlock
		}
	}
	return nil
}

func (x *Block) GetColumnEndBlock() *ColumnEndBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_ColumnEndBlock); ok {
			return x.ColumnEndBlock
		}
	}
	return nil
}

func (x *Block) GetContentBlock() *ContentBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_ContentBlock); ok {
			return x.ContentBlock
		}
	}
	return nil
}

func (x *Block) GetCalloutBlock() *CalloutBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_CalloutBlock); ok {
			return x.CalloutBlock
		}
	}
	return nil
}

func (x *Block) GetCodeBlock() *CodeBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_CodeBlock); ok {
			return x.CodeBlock
		}
	}
	return nil
}

func (x *Block) GetQuoteBlock() *QuoteBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_QuoteBlock); ok {
			return x.QuoteBlock
		}
	}
	return nil
}

func (x *Block) GetEquationBlock() *EquationBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_EquationBlock); ok {
			return x.EquationBlock
		}
	}
	return nil
}

func (x *Block) GetDividerBlock() *DividerBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_DividerBlock); ok {
			return x.DividerBlock
		}
	}
	return nil
}

func (x *Block) GetListBlock() *ListBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_ListBlock); ok {
			return x.ListBlock
		}
	}
	return nil
}

func (x *Block) GetTableOfContentsBlock() *TableOfContentsBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_TableOfContentsBlock); ok {
			return x.TableOfContentsBlock
		}
	}
	return nil
}

func (x *Block) GetBreadcrumbBlock() *BreadcrumbBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_BreadcrumbBlock); ok {
			return x.BreadcrumbBlock
		}
	}
	return nil
}

func (x *Block) GetTodoListBlock() *TodoListBlock {
	if x != nil {
		if x, ok := x.Kind.(*Block_TodoListBlock); ok {
			return x.TodoListBlock
		}
	}
	return nil
}

type isBlock_Kind interface {
	isBlock_Kind()
}

type Block_FileStartBlock struct {
	// Special Layout Marker Blocks
	FileStartBlock *FileStartBlock `protobuf:"bytes,1,opt,name=file_start_block,json=fileStartBlock,proto3,oneof"`
}

type Block_FileEndBlock struct {
	FileEndBlock *FileEndBlock `protobuf:"bytes,2,opt,name=file_end_block,json=fileEndBlock,proto3,oneof"`
}

type Block_RowStartBlock struct {
	RowStartBlock *RowStartBlock `protobuf:"bytes,3,opt,name=row_start_block,json=rowStartBlock,proto3,oneof"`
}

type Block_RowEndBlock struct {
	RowEndBlock *RowEndBlock `protobuf:"bytes,4,opt,name=row_end_block,json=rowEndBlock,proto3,oneof"`
}

type Block_ColumnStartBlock struct {
	ColumnStartBlock *ColumnStartBlock `protobuf:"bytes,5,opt,name=column_start_block,json=columnStartBlock,proto3,oneof"`
}

type Block_ColumnEndBlock struct {
	ColumnEndBlock *ColumnEndBlock `protobuf:"bytes,6,opt,name=column_end_block,json=columnEndBlock,proto3,oneof"`
}

type Block_ContentBlock struct {
	// Content Blocks
	ContentBlock *ContentBlock `protobuf:"bytes,11,opt,name=content_block,json=contentBlock,proto3,oneof"`
}

type Block_CalloutBlock struct {
	CalloutBlock *CalloutBlock `protobuf:"bytes,12,opt,name=callout_block,json=calloutBlock,proto3,oneof"`
}

type Block_CodeBlock struct {
	CodeBlock *CodeBlock `protobuf:"bytes,13,opt,name=code_block,json=codeBlock,proto3,oneof"`
}

type Block_QuoteBlock struct {
	QuoteBlock *QuoteBlock `protobuf:"bytes,14,opt,name=quote_block,json=quoteBlock,proto3,oneof"`
}

type Block_EquationBlock struct {
	EquationBlock *EquationBlock `protobuf:"bytes,15,opt,name=equation_block,json=equationBlock,proto3,oneof"`
}

type Block_DividerBlock struct {
	DividerBlock *DividerBlock `protobuf:"bytes,16,opt,name=divider_block,json=dividerBlock,proto3,oneof"`
}

type Block_ListBlock struct {
	// List Blocks
	ListBlock *ListBlock `protobuf:"bytes,20,opt,name=list_block,json=listBlock,proto3,oneof"`
}

type Block_TableOfContentsBlock struct {
	TableOfContentsBlock *TableOfContentsBlock `protobuf:"bytes,21,opt,name=table_of_contents_block,json=tableOfContentsBlock,proto3,oneof"`
}

type Block_BreadcrumbBlock struct {
	BreadcrumbBlock *BreadcrumbBlock `protobuf:"bytes,22,opt,name=breadcrumb_block,json=breadcrumbBlock,proto3,oneof"`
}

type Block_TodoListBlock struct {
	TodoListBlock *TodoListBlock `protobuf:"bytes,23,opt,name=todo_list_block,json=todoListBlock,proto3,oneof"`
}

func (*Block_FileStartBlock) isBlock_Kind() {}

func (*Block_FileEndBlock) isBlock_Kind() {}

func (*Block_RowStartBlock) isBlock_Kind() {}

func (*Block_RowEndBlock) isBlock_Kind() {}

func (*Block_ColumnStartBlock) isBlock_Kind() {}

func (*Block_ColumnEndBlock) isBlock_Kind() {}

func (*Block_ContentBlock) isBlock_Kind() {}

func (*Block_CalloutBlock) isBlock_Kind() {}

func (*Block_CodeBlock) isBlock_Kind() {}

func (*Block_QuoteBlock) isBlock_Kind() {}

func (*Block_EquationBlock) isBlock_Kind() {}

func (*Block_DividerBlock) isBlock_Kind() {}

func (*Block_ListBlock) isBlock_Kind() {}

func (*Block_TableOfContentsBlock) isBlock_Kind() {}

func (*Block_BreadcrumbBlock) isBlock_Kind() {}

func (*Block_TodoListBlock) isBlock_Kind() {}

// Special Layout Marker Blocks
type FileStartBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Style         string                 `protobuf:"bytes,1,opt,name=style,proto3" json:"style,omitempty"`
	TotalRows     int64                  `protobuf:"varint,2,opt,name=total_rows,json=totalRows,proto3" json:"total_rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileStartBlock) Reset() {
	*x = FileStartBlock{}
	mi := &file_protos_blocks_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileStartBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStartBlock) ProtoMessage() {}

func (x *FileStartBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStartBlock.ProtoReflect.Descriptor instead.
func (*FileStartBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{1}
}

func (x *FileStartBlock) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *FileStartBlock) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

type FileEndBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalSize     int64                  `protobuf:"varint,1,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileEndBlock) Reset() {
	*x = FileEndBlock{}
	mi := &file_protos_blocks_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileEndBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEndBlock) ProtoMessage() {}

func (x *FileEndBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEndBlock.ProtoReflect.Descriptor instead.
func (*FileEndBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{2}
}

func (x *FileEndBlock) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type RowStartBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Style         string                 `protobuf:"bytes,1,opt,name=style,proto3" json:"style,omitempty"`
	TotalColumns  int64                  `protobuf:"varint,2,opt,name=total_columns,json=totalColumns,proto3" json:"total_columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowStartBlock) Reset() {
	*x = RowStartBlock{}
	mi := &file_protos_blocks_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowStartBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowStartBlock) ProtoMessage() {}

func (x *RowStartBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowStartBlock.ProtoReflect.Descriptor instead.
func (*RowStartBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{3}
}

func (x *RowStartBlock) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *RowStartBlock) GetTotalColumns() int64 {
	if x != nil {
		return x.TotalColumns
	}
	return 0
}

type RowEndBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalSize     int64                  `protobuf:"varint,1,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowEndBlock) Reset() {
	*x = RowEndBlock{}
	mi := &file_protos_blocks_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowEndBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowEndBlock) ProtoMessage() {}

func (x *RowEndBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowEndBlock.ProtoReflect.Descriptor instead.
func (*RowEndBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{4}
}

func (x *RowEndBlock) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type ColumnStartBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Style         string                 `protobuf:"bytes,1,opt,name=style,proto3" json:"style,omitempty"`
	TotalBlocks   int64                  `protobuf:"varint,2,opt,name=total_blocks,json=totalBlocks,proto3" json:"total_blocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnStartBlock) Reset() {
	*x = ColumnStartBlock{}
	mi := &file_protos_blocks_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnStartBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnStartBlock) ProtoMessage() {}

func (x *ColumnStartBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnStartBlock.ProtoReflect.Descriptor instead.
func (*ColumnStartBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{5}
}

func (x *ColumnStartBlock) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *ColumnStartBlock) GetTotalBlocks() int64 {
	if x != nil {
		return x.TotalBlocks
	}
	return 0
}

type ColumnEndBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalSize     int64                  `protobuf:"varint,1,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnEndBlock) Reset() {
	*x = ColumnEndBlock{}
	mi := &file_protos_blocks_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnEndBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnEndBlock) ProtoMessage() {}

func (x *ColumnEndBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnEndBlock.ProtoReflect.Descriptor instead.
func (*ColumnEndBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{6}
}

func (x *ColumnEndBlock) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// Content Blocks
type HeaderBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        string                 `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Caption       []*Inline              `protobuf:"bytes,2,rep,name=caption,proto3" json:"caption,omitempty"`
	Content       []*Inline              `protobuf:"bytes,3,rep,name=content,proto3" json:"content,omitempty"`
	Collapsible   bool                   `protobuf:"varint,4,opt,name=collapsible,proto3" json:"collapsible,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderBlock) Reset() {
	*x = HeaderBlock{}
	mi := &file_protos_blocks_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderBlock) ProtoMessage() {}

func (x *HeaderBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderBlock.ProtoReflect.Descriptor instead.
func (*HeaderBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{7}
}

func (x *HeaderBlock) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *HeaderBlock) GetCaption() []*Inline {
	if x != nil {
		return x.Caption
	}
	return nil
}

func (x *HeaderBlock) GetContent() []*Inline {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *HeaderBlock) GetCollapsible() bool {
	if x != nil {
		return x.Collapsible
	}
	return false
}

type ContentBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []*Inline              `protobuf:"bytes,1,rep,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentBlock) Reset() {
	*x = ContentBlock{}
	mi := &file_protos_blocks_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentBlock) ProtoMessage() {}

func (x *ContentBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentBlock.ProtoReflect.Descriptor instead.
func (*ContentBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{8}
}

func (x *ContentBlock) GetContent() []*Inline {
	if x != nil {
		return x.Content
	}
	return nil
}

type CalloutBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Icon          string                 `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Content       []*Inline              `protobuf:"bytes,2,rep,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalloutBlock) Reset() {
	*x = CalloutBlock{}
	mi := &file_protos_blocks_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalloutBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalloutBlock) ProtoMessage() {}

func (x *CalloutBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalloutBlock.ProtoReflect.Descriptor instead.
func (*CalloutBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{9}
}

func (x *CalloutBlock) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CalloutBlock) GetContent() []*Inline {
	if x != nil {
		return x.Content
	}
	return nil
}

type CodeBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Caption       []*Inline              `protobuf:"bytes,1,rep,name=caption,proto3" json:"caption,omitempty"`
	Language      string                 `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Code          []string               `protobuf:"bytes,3,rep,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeBlock) Reset() {
	*x = CodeBlock{}
	mi := &file_protos_blocks_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeBlock) ProtoMessage() {}

func (x *CodeBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeBlock.ProtoReflect.Descriptor instead.
func (*CodeBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{10}
}

func (x *CodeBlock) GetCaption() []*Inline {
	if x != nil {
		return x.Caption
	}
	return nil
}

func (x *CodeBlock) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CodeBlock) GetCode() []string {
	if x != nil {
		return x.Code
	}
	return nil
}

type QuoteBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []*Inline              `protobuf:"bytes,1,rep,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuoteBlock) Reset() {
	*x = QuoteBlock{}
	mi := &file_protos_blocks_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteBlock) ProtoMessage() {}

func (x *QuoteBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteBlock.ProtoReflect.Descriptor instead.
func (*QuoteBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{11}
}

func (x *QuoteBlock) GetContent() []*Inline {
	if x != nil {
		return x.Content
	}
	return nil
}

type EquationBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expression    string                 `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquationBlock) Reset() {
	*x = EquationBlock{}
	mi := &file_protos_blocks_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquationBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquationBlock) ProtoMessage() {}

func (x *EquationBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquationBlock.ProtoReflect.Descriptor instead.
func (*EquationBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{12}
}

func (x *EquationBlock) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

type DividerBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DividerBlock) Reset() {
	*x = DividerBlock{}
	mi := &file_protos_blocks_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DividerBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DividerBlock) ProtoMessage() {}

func (x *DividerBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DividerBlock.ProtoReflect.Descriptor instead.
func (*DividerBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{13}
}

// Simple list blocks
type ListBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ListItem            `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBlock) Reset() {
	*x = ListBlock{}
	mi := &file_protos_blocks_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlock) ProtoMessage() {}

func (x *ListBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlock.ProtoReflect.Descriptor instead.
func (*ListBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{14}
}

func (x *ListBlock) GetItems() []*ListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type TableOfContentsBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ListItem            `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableOfContentsBlock) Reset() {
	*x = TableOfContentsBlock{}
	mi := &file_protos_blocks_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableOfContentsBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableOfContentsBlock) ProtoMessage() {}

func (x *TableOfContentsBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableOfContentsBlock.ProtoReflect.Descriptor instead.
func (*TableOfContentsBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{15}
}

func (x *TableOfContentsBlock) GetItems() []*ListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []*Inline              `protobuf:"bytes,1,rep,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListItem) Reset() {
	*x = ListItem{}
	mi := &file_protos_blocks_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListItem) ProtoMessage() {}

func (x *ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListItem.ProtoReflect.Descriptor instead.
func (*ListItem) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{16}
}

func (x *ListItem) GetContent() []*Inline {
	if x != nil {
		return x.Content
	}
	return nil
}

type BreadcrumbBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inline        []*Inline              `protobuf:"bytes,1,rep,name=inline,proto3" json:"inline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BreadcrumbBlock) Reset() {
	*x = BreadcrumbBlock{}
	mi := &file_protos_blocks_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BreadcrumbBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreadcrumbBlock) ProtoMessage() {}

func (x *BreadcrumbBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreadcrumbBlock.ProtoReflect.Descriptor instead.
func (*BreadcrumbBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{17}
}

func (x *BreadcrumbBlock) GetInline() []*Inline {
	if x != nil {
		return x.Inline
	}
	return nil
}

type TodoListBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        []*Inline              `protobuf:"bytes,1,rep,name=header,proto3" json:"header,omitempty"`
	Items         []*CheckableListItem   `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TodoListBlock) Reset() {
	*x = TodoListBlock{}
	mi := &file_protos_blocks_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TodoListBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TodoListBlock) ProtoMessage() {}

func (x *TodoListBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TodoListBlock.ProtoReflect.Descriptor instead.
func (*TodoListBlock) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{18}
}

func (x *TodoListBlock) GetHeader() []*Inline {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *TodoListBlock) GetItems() []*CheckableListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CheckableListItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsChecked     bool                   `protobuf:"varint,1,opt,name=is_checked,json=isChecked,proto3" json:"is_checked,omitempty"`
	Content       []*Inline              `protobuf:"bytes,2,rep,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckableListItem) Reset() {
	*x = CheckableListItem{}
	mi := &file_protos_blocks_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckableListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckableListItem) ProtoMessage() {}

func (x *CheckableListItem) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckableListItem.ProtoReflect.Descriptor instead.
func (*CheckableListItem) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{19}
}

func (x *CheckableListItem) GetIsChecked() bool {
	if x != nil {
		return x.IsChecked
	}
	return false
}

func (x *CheckableListItem) GetContent() []*Inline {
	if x != nil {
		return x.Content
	}
	return nil
}

// Inline nodes
type Inline struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Inline_Text
	//	*Inline_Link
	//	*Inline_Mention
	//	*Inline_Equation
	//	*Inline_Code
	//	*Inline_Image
	//	*Inline_EmbeddedImage
	Kind          isInline_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Inline) Reset() {
	*x = Inline{}
	mi := &file_protos_blocks_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Inline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inline) ProtoMessage() {}

func (x *Inline) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inline.ProtoReflect.Descriptor instead.
func (*Inline) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{20}
}

func (x *Inline) GetKind() isInline_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Inline) GetText() *Text {
	if x != nil {
		if x, ok := x.Kind.(*Inline_Text); ok {
			return x.Text
		}
	}
	return nil
}

func (x *Inline) GetLink() *Link {
	if x != nil {
		if x, ok := x.Kind.(*Inline_Link); ok {
			return x.Link
		}
	}
	return nil
}

func (x *Inline) GetMention() *Mention {
	if x != nil {
		if x, ok := x.Kind.(*Inline_Mention); ok {
			return x.Mention
		}
	}
	return nil
}

func (x *Inline) GetEquation() *Equation {
	if x != nil {
		if x, ok := x.Kind.(*Inline_Equation); ok {
			return x.Equation
		}
	}
	return nil
}

func (x *Inline) GetCode() *Code {
	if x != nil {
		if x, ok := x.Kind.(*Inline_Code); ok {
			return x.Code
		}
	}
	return nil
}

func (x *Inline) GetImage() *Image {
	if x != nil {
		if x, ok := x.Kind.(*Inline_Image); ok {
			return x.Image
		}
	}
	return nil
}

func (x *Inline) GetEmbeddedImage() *EmbeddedImage {
	if x != nil {
		if x, ok := x.Kind.(*Inline_EmbeddedImage); ok {
			return x.EmbeddedImage
		}
	}
	return nil
}

type isInline_Kind interface {
	isInline_Kind()
}

type Inline_Text struct {
	Text *Text `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type Inline_Link struct {
	Link *Link `protobuf:"bytes,2,opt,name=link,proto3,oneof"`
}

type Inline_Mention struct {
	Mention *Mention `protobuf:"bytes,3,opt,name=mention,proto3,oneof"`
}

type Inline_Equation struct {
	Equation *Equation `protobuf:"bytes,4,opt,name=equation,proto3,oneof"`
}

type Inline_Code struct {
	Code *Code `protobuf:"bytes,5,opt,name=code,proto3,oneof"`
}

type Inline_Image struct {
	Image *Image `protobuf:"bytes,6,opt,name=image,proto3,oneof"`
}

type Inline_EmbeddedImage struct {
	EmbeddedImage *EmbeddedImage `protobuf:"bytes,7,opt,name=embedded_image,json=embeddedImage,proto3,oneof"`
}

func (*Inline_Text) isInline_Kind() {}

func (*Inline_Link) isInline_Kind() {}

func (*Inline_Mention) isInline_Kind() {}

func (*Inline_Equation) isInline_Kind() {}

func (*Inline_Code) isInline_Kind() {}

func (*Inline_Image) isInline_Kind() {}

func (*Inline_EmbeddedImage) isInline_Kind() {}

type Text struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Unicode       string                 `protobuf:"bytes,1,opt,name=unicode,proto3" json:"unicode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Text) Reset() {
	*x = Text{}
	mi := &file_protos_blocks_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{21}
}

func (x *Text) GetUnicode() string {
	if x != nil {
		return x.Unicode
	}
	return ""
}

type Link struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Unicode       string                 `protobuf:"bytes,2,opt,name=unicode,proto3" json:"unicode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Link) Reset() {
	*x = Link{}
	mi := &file_protos_blocks_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{22}
}

func (x *Link) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Link) GetUnicode() string {
	if x != nil {
		return x.Unicode
	}
	return ""
}

type Mention struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mention) Reset() {
	*x = Mention{}
	mi := &file_protos_blocks_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mention) ProtoMessage() {}

func (x *Mention) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mention.ProtoReflect.Descriptor instead.
func (*Mention) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{23}
}

func (x *Mention) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Equation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expression    string                 `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Equation) Reset() {
	*x = Equation{}
	mi := &file_protos_blocks_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Equation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Equation) ProtoMessage() {}

func (x *Equation) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Equation.ProtoReflect.Descriptor instead.
func (*Equation) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{24}
}

func (x *Equation) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

type Code struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Unicode       string                 `protobuf:"bytes,1,opt,name=unicode,proto3" json:"unicode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Code) Reset() {
	*x = Code{}
	mi := &file_protos_blocks_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Code) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Code) ProtoMessage() {}

func (x *Code) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Code.ProtoReflect.Descriptor instead.
func (*Code) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{25}
}

func (x *Code) GetUnicode() string {
	if x != nil {
		return x.Unicode
	}
	return ""
}

type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_protos_blocks_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{26}
}

func (x *Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type EmbeddedImage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base64        string                 `protobuf:"bytes,1,opt,name=base64,proto3" json:"base64,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmbeddedImage) Reset() {
	*x = EmbeddedImage{}
	mi := &file_protos_blocks_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbeddedImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedImage) ProtoMessage() {}

func (x *EmbeddedImage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blocks_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddedImage.ProtoReflect.Descriptor instead.
func (*EmbeddedImage) Descriptor() ([]byte, []int) {
	return file_protos_blocks_proto_rawDescGZIP(), []int{27}
}

func (x *EmbeddedImage) GetBase64() string {
	if x != nil {
		return x.Base64
	}
	return ""
}

var File_protos_blocks_proto protoreflect.FileDescriptor

var file_protos_blocks_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x8f, 0x08,
	0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x42, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0e, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3c, 0x0a, 0x0e, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x69, 0x6c,
	0x65, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3f, 0x0a, 0x0f, 0x72, 0x6f, 0x77,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x52, 0x6f, 0x77, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x6f, 0x77,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x39, 0x0a, 0x0d, 0x72, 0x6f,
	0x77, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x52, 0x6f, 0x77, 0x45, 0x6e,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x6f, 0x77, 0x45, 0x6e, 0x64,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x10, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x42, 0x0a, 0x10, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x45, 0x6e, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x3b, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x3b, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52,
	0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x32, 0x0a,
	0x0a, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x35, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0a, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3e, 0x0a, 0x0e, 0x65, 0x71, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x71, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3b, 0x0a, 0x0d, 0x64, 0x69, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x32, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x09,
	0x6c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x55, 0x0a, 0x17, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x14, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x44, 0x0a, 0x10, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0f, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d,
	0x62, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3f, 0x0a, 0x0f, 0x74, 0x6f, 0x64, 0x6f, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x54, 0x6f, 0x64, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x6f, 0x64, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22,
	0x45, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x2d, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6e,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4a, 0x0a, 0x0d, 0x52, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x22, 0x2c, 0x0a, 0x0b, 0x52, 0x6f, 0x77, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x4b, 0x0a, 0x10, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x2f, 0x0a, 0x0e,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x9b, 0x01,
	0x0a, 0x0b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e,
	0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6c,
	0x6c, 0x61, 0x70, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0x38, 0x0a, 0x0c, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x09, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x28, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x36, 0x0a, 0x0a, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x0d, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x33, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3e, 0x0a, 0x14, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x34, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x49,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x39,
	0x0a, 0x0f, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x26, 0x0a, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x68, 0x0a, 0x0d, 0x54, 0x6f, 0x64,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x5c, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x61, 0x62, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0xc0, 0x02, 0x0a, 0x06, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x4d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x65, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x45, 0x71, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x65, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x0e,
	0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x65,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x22, 0x20, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x6e, 0x69, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x32, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x22, 0x0a, 0x07, 0x4d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2a,
	0x0a, 0x08, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x19, 0x0a, 0x05,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x27, 0x0a, 0x0d, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x73, 0x65,
	0x36, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_protos_blocks_proto_rawDescOnce sync.Once
	file_protos_blocks_proto_rawDescData []byte
)

func file_protos_blocks_proto_rawDescGZIP() []byte {
	file_protos_blocks_proto_rawDescOnce.Do(func() {
		file_protos_blocks_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_blocks_proto_rawDesc), len(file_protos_blocks_proto_rawDesc)))
	})
	return file_protos_blocks_proto_rawDescData
}

var file_protos_blocks_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_protos_blocks_proto_goTypes = []any{
	(*Block)(nil),                // 0: blocks.Block
	(*FileStartBlock)(nil),       // 1: blocks.FileStartBlock
	(*FileEndBlock)(nil),         // 2: blocks.FileEndBlock
	(*RowStartBlock)(nil),        // 3: blocks.RowStartBlock
	(*RowEndBlock)(nil),          // 4: blocks.RowEndBlock
	(*ColumnStartBlock)(nil),     // 5: blocks.ColumnStartBlock
	(*ColumnEndBlock)(nil),       // 6: blocks.ColumnEndBlock
	(*HeaderBlock)(nil),          // 7: blocks.HeaderBlock
	(*ContentBlock)(nil),         // 8: blocks.ContentBlock
	(*CalloutBlock)(nil),         // 9: blocks.CalloutBlock
	(*CodeBlock)(nil),            // 10: blocks.CodeBlock
	(*QuoteBlock)(nil),           // 11: blocks.QuoteBlock
	(*EquationBlock)(nil),        // 12: blocks.EquationBlock
	(*DividerBlock)(nil),         // 13: blocks.DividerBlock
	(*ListBlock)(nil),            // 14: blocks.ListBlock
	(*TableOfContentsBlock)(nil), // 15: blocks.TableOfContentsBlock
	(*ListItem)(nil),             // 16: blocks.ListItem
	(*BreadcrumbBlock)(nil),      // 17: blocks.BreadcrumbBlock
	(*TodoListBlock)(nil),        // 18: blocks.TodoListBlock
	(*CheckableListItem)(nil),    // 19: blocks.CheckableListItem
	(*Inline)(nil),               // 20: blocks.Inline
	(*Text)(nil),                 // 21: blocks.Text
	(*Link)(nil),                 // 22: blocks.Link
	(*Mention)(nil),              // 23: blocks.Mention
	(*Equation)(nil),             // 24: blocks.Equation
	(*Code)(nil),                 // 25: blocks.Code
	(*Image)(nil),                // 26: blocks.Image
	(*EmbeddedImage)(nil),        // 27: blocks.EmbeddedImage
}
var file_protos_blocks_proto_depIdxs = []int32{
	1,  // 0: blocks.Block.file_start_block:type_name -> blocks.FileStartBlock
	2,  // 1: blocks.Block.file_end_block:type_name -> blocks.FileEndBlock
	3,  // 2: blocks.Block.row_start_block:type_name -> blocks.RowStartBlock
	4,  // 3: blocks.Block.row_end_block:type_name -> blocks.RowEndBlock
	5,  // 4: blocks.Block.column_start_block:type_name -> blocks.ColumnStartBlock
	6,  // 5: blocks.Block.column_end_block:type_name -> blocks.ColumnEndBlock
	8,  // 6: blocks.Block.content_block:type_name -> blocks.ContentBlock
	9,  // 7: blocks.Block.callout_block:type_name -> blocks.CalloutBlock
	10, // 8: blocks.Block.code_block:type_name -> blocks.CodeBlock
	11, // 9: blocks.Block.quote_block:type_name -> blocks.QuoteBlock
	12, // 10: blocks.Block.equation_block:type_name -> blocks.EquationBlock
	13, // 11: blocks.Block.divider_block:type_name -> blocks.DividerBlock
	14, // 12: blocks.Block.list_block:type_name -> blocks.ListBlock
	15, // 13: blocks.Block.table_of_contents_block:type_name -> blocks.TableOfContentsBlock
	17, // 14: blocks.Block.breadcrumb_block:type_name -> blocks.BreadcrumbBlock
	18, // 15: blocks.Block.todo_list_block:type_name -> blocks.TodoListBlock
	20, // 16: blocks.HeaderBlock.caption:type_name -> blocks.Inline
	20, // 17: blocks.HeaderBlock.content:type_name -> blocks.Inline
	20, // 18: blocks.ContentBlock.content:type_name -> blocks.Inline
	20, // 19: blocks.CalloutBlock.content:type_name -> blocks.Inline
	20, // 20: blocks.CodeBlock.caption:type_name -> blocks.Inline
	20, // 21: blocks.QuoteBlock.content:type_name -> blocks.Inline
	16, // 22: blocks.ListBlock.items:type_name -> blocks.ListItem
	16, // 23: blocks.TableOfContentsBlock.items:type_name -> blocks.ListItem
	20, // 24: blocks.ListItem.content:type_name -> blocks.Inline
	20, // 25: blocks.BreadcrumbBlock.inline:type_name -> blocks.Inline
	20, // 26: blocks.TodoListBlock.header:type_name -> blocks.Inline
	19, // 27: blocks.TodoListBlock.items:type_name -> blocks.CheckableListItem
	20, // 28: blocks.CheckableListItem.content:type_name -> blocks.Inline
	21, // 29: blocks.Inline.text:type_name -> blocks.Text
	22, // 30: blocks.Inline.link:type_name -> blocks.Link
	23, // 31: blocks.Inline.mention:type_name -> blocks.Mention
	24, // 32: blocks.Inline.equation:type_name -> blocks.Equation
	25, // 33: blocks.Inline.code:type_name -> blocks.Code
	26, // 34: blocks.Inline.image:type_name -> blocks.Image
	27, // 35: blocks.Inline.embedded_image:type_name -> blocks.EmbeddedImage
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_protos_blocks_proto_init() }
func file_protos_blocks_proto_init() {
	if File_protos_blocks_proto != nil {
		return
	}
	file_protos_blocks_proto_msgTypes[0].OneofWrappers = []any{
		(*Block_FileStartBlock)(nil),
		(*Block_FileEndBlock)(nil),
		(*Block_RowStartBlock)(nil),
		(*Block_RowEndBlock)(nil),
		(*Block_ColumnStartBlock)(nil),
		(*Block_ColumnEndBlock)(nil),
		(*Block_ContentBlock)(nil),
		(*Block_CalloutBlock)(nil),
		(*Block_CodeBlock)(nil),
		(*Block_QuoteBlock)(nil),
		(*Block_EquationBlock)(nil),
		(*Block_DividerBlock)(nil),
		(*Block_ListBlock)(nil),
		(*Block_TableOfContentsBlock)(nil),
		(*Block_BreadcrumbBlock)(nil),
		(*Block_TodoListBlock)(nil),
	}
	file_protos_blocks_proto_msgTypes[20].OneofWrappers = []any{
		(*Inline_Text)(nil),
		(*Inline_Link)(nil),
		(*Inline_Mention)(nil),
		(*Inline_Equation)(nil),
		(*Inline_Code)(nil),
		(*Inline_Image)(nil),
		(*Inline_EmbeddedImage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_blocks_proto_rawDesc), len(file_protos_blocks_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_blocks_proto_goTypes,
		DependencyIndexes: file_protos_blocks_proto_depIdxs,
		MessageInfos:      file_protos_blocks_proto_msgTypes,
	}.Build()
	File_protos_blocks_proto = out.File
	file_protos_blocks_proto_goTypes = nil
	file_protos_blocks_proto_depIdxs = nil
}
